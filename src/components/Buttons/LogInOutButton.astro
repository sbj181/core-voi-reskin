---
// This is the frontmatter section where you can import other components or scripts if needed


import { Icon } from 'astro-icon';
import IfLoggedIn from '~/components/DynamicContent/IfLoggedIn.astro';

const { videoLink, text } = Astro.props as Props;
---

<IfLoggedIn>
          
  <div slot="loggedIn">
    <button 
      class='LogInOutButton' 
      onClick="netlifyIdentity.logout();"
      data-notification="false"
    >
      <div class="LogInOutButtonInner">
        <!-- <Icon name=ic:outline-notification-important /> -->
        <span>Log Out</span>
      </div>
    </button>
  </div>

  <div slot="loggedOut">
   <button 
     class='LogInOutButton' 
     onClick="netlifyIdentity.open();"
     data-notification="false"
   >
     <div class="LogInOutButtonInner">
       <!-- <Icon name=ic:outline-notification-important /> -->
       <span>Log In</span>
     </div>
   </button>
  </div>
  
</IfLoggedIn>



<style lang="scss">
  
  .LogInOutButton {
      position: relative;
      border: 1px solid var(--custom-accent-1-50);
      border-radius: 1.5rem;
      /* background-color: transparent; */
      background-color: var(--theme-code-inline-bg);
      cursor: pointer;
      font-size: 1rem;
      padding: 0.25em 0.5em;
      line-height: calc(1 / var(--theme-text-xs));
      [astro-icon] {
        color: var(--theme-text);
      }
      &:hover{
        background-color: var(--custom-accent-2-10);
      }
      min-height: 36px;
      span {
        display: none;
        /* color: var(--theme-text-lighter); */
      }
      @media (min-width: 800px) {
        //padding: 0.65em 1.5em 0.65em 0.75em;
        padding: 0.65em 1.5em;
        span {
          display: block;
        }
        svg {
          margin: 0 10px 0 0;
        }
      }
      .LogInOutButton_inner {
        display: flex;
        align-items: center;
      }
      .notificationWrapper{
        opacity: 0;
      }
      &[data-notification="true"]{
        .notificationWrapper{
          opacity: 1;
        }
      }
  }

</style>

<script type="text/javascript">
 
  //add notification dot if conditions are met
  function buttonNotificationOn(){
    var targetElement = document.querySelector(".AnnouncementButton");
    targetElement.setAttribute("data-notification","true");
    SessionManager().setItem('AnnouncementsNotification', 'true');
  }

  //remove notification dot
  function buttonNotificationOff(){
    event.currentTarget.setAttribute("data-notification","false");
  }

  //open announcement modal
  function modalOpenAnnouncement(){
    var targetElement = document.querySelector(".ModalWrapper[data-modal='announcement']");
    targetElement.classList.add("active");
  }

  //RUN FUNCTIONS
  const sessionVar = SessionManager.getItem('AnnouncementsNotification');

  console.log(sessionVar);
  if (sessionVar == false){
    //nothing
  } else {
    console.log("sessionVar !== 'false'");
    buttonNotificationOn();
  }
</script>